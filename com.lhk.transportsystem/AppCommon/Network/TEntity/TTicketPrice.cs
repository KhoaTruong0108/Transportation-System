/**
 * Autogenerated by Thrift Compiler (0.8.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace TransportService
{

  [Serializable]
  public partial class TTicketPrice : TBase
  {
    private string _PriceId;
    private string _SeatType;
    private double _Price;
    private string _Description;

    public string PriceId
    {
      get
      {
        return _PriceId;
      }
      set
      {
        __isset.PriceId = true;
        this._PriceId = value;
      }
    }

    public string SeatType
    {
      get
      {
        return _SeatType;
      }
      set
      {
        __isset.SeatType = true;
        this._SeatType = value;
      }
    }

    public double Price
    {
      get
      {
        return _Price;
      }
      set
      {
        __isset.Price = true;
        this._Price = value;
      }
    }

    public string Description
    {
      get
      {
        return _Description;
      }
      set
      {
        __isset.Description = true;
        this._Description = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool PriceId;
      public bool SeatType;
      public bool Price;
      public bool Description;
    }

    public TTicketPrice() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              PriceId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              SeatType = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Double) {
              Price = iprot.ReadDouble();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              Description = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("TTicketPrice");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (PriceId != null && __isset.PriceId) {
        field.Name = "PriceId";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(PriceId);
        oprot.WriteFieldEnd();
      }
      if (SeatType != null && __isset.SeatType) {
        field.Name = "SeatType";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SeatType);
        oprot.WriteFieldEnd();
      }
      if (__isset.Price) {
        field.Name = "Price";
        field.Type = TType.Double;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteDouble(Price);
        oprot.WriteFieldEnd();
      }
      if (Description != null && __isset.Description) {
        field.Name = "Description";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Description);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("TTicketPrice(");
      sb.Append("PriceId: ");
      sb.Append(PriceId);
      sb.Append(",SeatType: ");
      sb.Append(SeatType);
      sb.Append(",Price: ");
      sb.Append(Price);
      sb.Append(",Description: ");
      sb.Append(Description);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
